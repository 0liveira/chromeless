[
  {
    "fn": "function (client, url) { return __awaiter(_this, void 0, void 0, function () {\n                var Network, Page, e_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            Network = client.Network, Page = client.Page;\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 6, , 7]);\n                            return [4 /*yield*/, Promise.all([Network.enable(), Page.enable()])];\n                        case 2:\n                            _a.sent();\n                            return [4 /*yield*/, Page.navigate({ url: url })];\n                        case 3:\n                            _a.sent();\n                            return [4 /*yield*/, Page.loadEventFired()];\n                        case 4:\n                            _a.sent();\n                            return [4 /*yield*/, util_1.wait(500)];\n                        case 5:\n                            _a.sent();\n                            console.log('Navigated to', url);\n                            return [3 /*break*/, 7];\n                        case 6:\n                            e_1 = _a.sent();\n                            console.error(e_1);\n                            return [3 /*break*/, 7];\n                        case 7: return [2 /*return*/];\n                    }\n                });\n            }); }",
    "args": {
      "url": "http://localhost:8064"
    }
  },
  {
    "fn": "function (client, selector, artificialClick) { return __awaiter(_this, void 0, void 0, function () {\n                var exists, fakeClick;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, util_1.nodeExists(client, selector)];\n                        case 1:\n                            exists = _a.sent();\n                            if (!exists) {\n                                throw new Error(\"click(): node for selector \" + selector + \" doesn't exist\");\n                            }\n                            fakeClick = typeof artificialClick === 'boolean' ? artificialClick : this.options.useArtificialClick;\n                            return [4 /*yield*/, util_1.click(client, fakeClick, selector)];\n                        case 2:\n                            _a.sent();\n                            console.log('Clicked on ', selector);\n                            return [2 /*return*/];\n                    }\n                });\n            }); }",
    "args": {
      "selector": "#submit"
    }
  },
  {
    "fn": "function (client, selector) { return __awaiter(_this, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                console.log(\"Waiting for \" + selector);\n                                return [4 /*yield*/, util_1.waitForNode(client, selector, this.options.waitTimeout)];\n                            case 1:\n                                _a.sent();\n                                console.log(\"Waited for \" + selector);\n                                return [2 /*return*/];\n                        }\n                    });\n                }); }",
    "args": {
      "selector": "div"
    }
  }
]